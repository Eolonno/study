use An_MyBase

--1 задание
--Фамилии преподавателей, которые учатся на курсе, в названии которого есть буква "и"
select Группы.[Количество студентов], Фамилия from Преподаватели, Группы
	where Преподаватели.[Номер группы] in (select [Номер группы] from Группы, Курсы where Курсы.[Код курса] = Группы.[Код курса] and Курсы.Предмет like '%и%') 
	and Преподаватели.[Номер группы] = Группы.[Номер группы];

--2 задание
--Задание, аналогичное первому, но с конструкцией inner join в секции from
select Группы.[Количество студентов], Фамилия from Преподаватели join Группы on Преподаватели.[Номер группы] = Группы.[Номер группы]
	where Преподаватели.[Номер группы] in (select [Номер группы] from Группы, Курсы where Курсы.[Код курса] = Группы.[Код курса] and Курсы.Предмет like '%и%');

--3 задание
--Переписать первое задание без использования подзапроса
select Группы.[Количество студентов], Фамилия from Преподаватели join Группы on Преподаватели.[Номер группы] = Группы.[Номер группы]
	join Курсы on Курсы.[Код курса] = Группы.[Код курса]
	where Курсы.Предмет like '%и%';

--4 задание
--Вывести преподавателей, который обучаются в топе 3 самых вместительных групп
select Преподаватели.[Номер группы], Преподаватели.Фамилия from Преподаватели
	where Преподаватели.[Номер группы] in (select top(3) Группы.[Номер группы] from Группы order by Группы.[Количество студентов] desc);

--5 задание
--Вывести группы, которые не записаны ни на один курс

--Удаляю у 7 группы курс №5
--alter table Группы alter column [Код курса] int NULL;
--update Группы set [Код курса] = NULL where [Код курса] = 5;

select Группы.[Номер группы] from Группы
	where not exists (select * from Курсы where Курсы.[Код курса] = Группы.[Код курса]);

--6 задание
--Вывести среднюю стоимость курсов, среднее кол-во человек в группе и среднее кол-во часов за курс
select 
	(select avg(Группы.[Количество студентов]) from Группы)[Ср. кол-во студентов],
	(select avg(Курсы.Оплата) from Курсы)[Ср. оплата за курсы],
	(select avg(Курсы.Часы) from Курсы)[Ср. кол-во часов за курс];

--7 задание
--Нечто с all

--После этой строки запрос выведет 0 значений, так как не все значения часов будут одинаковы
insert into Курсы(Часы, Предмет, [Тип занятия], Оплата) values 
	(65, 'КР', 'Лекция', 382);

select * from Курсы
	where Курсы.Часы = all(select Курсы.Часы from Курсы);

--После этой строки запрос выведет много значений, так как все значения часов будут равны числу 55
delete from Курсы where [Код курса] = 6;

--8 задание
--Нечто с any
--Будут выведены все значения, так как any достаточно и одного совпадения
select * from Курсы
	where Курсы.Часы = any(select Курсы.Часы from Курсы);

--10 задание
--Найти преподавателей с одинаковым стажем
select Преподаватели.Фамилия, Преподаватели.Стаж, Teachers.Стаж, Teachers.Фамилия from Преподаватели left join Преподаватели as Teachers 
	on Teachers.Стаж = Преподаватели.Стаж 
	and Преподаватели.[Код преподавателя] != Teachers.[Код преподавателя]
	where Teachers.Стаж IS NOT NULL;
